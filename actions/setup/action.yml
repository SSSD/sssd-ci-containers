name: 'Setup and start sssd-ci-containers'
inputs:
  path:
    description: Where to checkout sssd-ci-containers sources.
    required: false
    default: sssd-ci-containers
  tag:
    description: Image tag to pull.
    required: false
    default: latest
  registry:
    description: Image registry.
    required: false
    default: quay.io/sssd
  limit:
    description: Comma separated list of services to run (empty = all).
    required: false
  override:
    description: Override docker-compose.
    required: false
runs:
  using: "composite"
  steps:
  - name: Install dependencies
    shell: bash
    run: |
      set -ex
      sudo apt-get update
      sudo apt-get install -y podman docker-compose

  - name: Workaround https://github.com/actions/runner-images/issues/7753
    shell: bash
    run: |
      curl -O http://archive.ubuntu.com/ubuntu/pool/universe/g/golang-github-containernetworking-plugins/containernetworking-plugins_1.1.1+ds1-3ubuntu0.24.04.2_amd64.deb
      sudo dpkg -i containernetworking-plugins_1.1.1+ds1-3ubuntu0.24.04.2_amd64.deb
      rm --force containernetworking-plugins_1.1.1+ds1-3ubuntu0.24.04.2_amd64.deb

  - name: Workaround https://github.com/containers/crun/issues/1308
    shell: bash
    run: |
      CRUN_VER='1.11.2'
      sudo curl -L "https://github.com/containers/crun/releases/download/${CRUN_VER}/crun-${CRUN_VER}-linux-amd64" -o "/usr/bin/crun"
      sudo chmod +x "/usr/bin/crun"
      crun --version

  - name: Start podman socket
    shell: bash
    run: |
      sudo systemctl enable podman.socket
      sudo systemctl restart podman.socket

  - name: Checkout sssd-ci-containers repository
    uses: actions/checkout@v3
    with:
      repository: SSSD/sssd-ci-containers
      path: ${{ inputs.path }}

  - name: Add override
    shell: bash
    env:
      OVERRIDE: ${{ inputs.override }}
    run: |
      if [[ ! -z $OVERRIDE ]]; then
        echo "$OVERRIDE" > "${{ inputs.path }}/docker-compose.override.yml"
        cat "${{ inputs.path }}/docker-compose.override.yml"
      fi

  - name: Setup DNS
    shell: bash
    run: |
      sudo make -C "${{ inputs.path }}" setup-dns-files

  - name: Trust container CA
    shell: bash
    run: |
        sudo cp "${{ inputs.path }}/data/certs/ca.crt" /usr/local/share/ca-certificates
        sudo update-ca-certificates

  - name: Print docker-compose config
    shell: bash
    run: |
      export REGISTRY="${{ inputs.registry }}"
      export TAG="${{ inputs.tag }}"
      docker-compose --project-directory "${{ inputs.path }}" config

  - name: Start containers
    uses: nick-fields/retry@v2
    with:
      shell: bash
      max_attempts: 3
      timeout_minutes: 5
      retry_on: error
      command: |
        # Put it down first to allow smooth retry and avoid "network need to be recreated" issue
        # This is a workaround for older podman
        sudo make -C "${{ inputs.path }}" down         \
          DOCKER_HOST=unix:///run/podman/podman.sock

        sudo make -C "${{ inputs.path }}" up         \
          DOCKER_HOST=unix:///run/podman/podman.sock \
          LIMIT="${{ inputs.limit }}"                \
          REGISTRY="${{ inputs.registry }}"          \
          TAG="${{ inputs.tag }}"

  - name: Change regular user uid to 1001
    shell: bash
    run: |
      # GitHub-hosted runner user has uid 1001, so lets propagate this to the
      # containers to simplify permission management of shared folders.

      for svc in `sudo podman container ls --format "{{ .Names }}"`; do
        if [ $svc != "dns" ]; then
          sudo podman exec "$svc" usermod -u 1001 ci &
          sudo podman exec "$svc" groupmod -g 1001 ci &
        fi
      done

      wait
