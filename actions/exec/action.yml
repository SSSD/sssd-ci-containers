name: 'Execute script inside a container'
inputs:
  script:
    description: Script to run.
    required: true
  where:
    description: Which container(s) will run the script.
    required: false
    default: client
  user:
    description: User that will be used to run the script.
    required: false
    default: ci
  log-file:
    description: Path to the log file where the output will be stored.
    required: false
  working-directory:
    description: Working directory.
    required: false
    default: /
runs:
  using: "composite"
  steps:
  - name: Create temporary script
    shell: bash
    id: script
    env:
      script: ${{ inputs.script }}
    run: |
      file=`mktemp`
      echo -e "$script" > "$file"
      echo "path=$file" >> $GITHUB_OUTPUT

  - name: Copy file to the container
    shell: bash
    env:
      path: ${{ steps.script.outputs.path }}
      where: ${{ inputs.where }}
    run: |
      for container in $where; do
        echo -e ::group::Preparing container: $container
        sudo podman cp "$path" "$container:$path"
        sudo podman exec "$container" chmod a=rx "$path"
        echo ::endgroup::
      done

  - name: Execute command
    shell: bash
    env:
      path: ${{ steps.script.outputs.path }}
      user: ${{ inputs.user }}
      where: ${{ inputs.where }}
      log: ${{ inputs.log-file }}
      workdir: ${{ inputs.working-directory }}
    run: |
      set -ex -o pipefail
      [[ ! -z $log ]] && log=\"$log\"

      for container in $where; do
        echo -e ::group::Executing on: $container
        sudo podman exec                                 \
          --user "$user"                                 \
          --env "USER=$user"                             \
          --workdir "$workdir"                           \
          "$container" /bin/bash -c "$path" |& tee $log.$container
        echo ::endgroup::
      done
