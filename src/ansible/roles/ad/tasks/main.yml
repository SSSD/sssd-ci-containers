- name: Allow access from our network
  win_firewall_rule:
    name: Allow access from our network
    direction: in
    action: allow
    enabled: yes
    state: present
  when: open_firewall

- name: Set the default SSH shell to PowerShell
  win_regedit:
    path: HKLM:\SOFTWARE\OpenSSH
    name: DefaultShell
    data: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
    type: string
    state: present

- name: Detect cygwin
  win_stat:
    path: 'C:\cygwin64\etc'
  register: cygwin

- name: Configure shell for cygwin
  win_lineinfile:
    path: 'C:\cygwin64\etc\nsswitch.conf'
    line: "db_shell: /cygdrive/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe"
  when: cygwin.stat.exists
  register: configured_cygwin

- name: Reboot machine to apply changes in cygwin config
  win_reboot:
  when: configured_cygwin.changed and skip_addc_install

- name: Prepare AD facts
  set_fact:
    ad_domain: "{{ '.'.join(inventory_hostname.split('.')[1:]) }}"
    ad_netbios: "{{ inventory_hostname.split('.')[0].upper() }}"
    ad_suffix: "{{ inventory_hostname.split('.')[1:] | map('regex_replace', '^(.*)$', 'dc=\\1') | join(',') }}"
    ad_password: "{{ service.ad.safe_password }}"

- name: Debug AD facts
  debug:
    msg: 'AD domain: "{{ ad_domain }}", AD netbios: "{{ ad_netbios }}", AD suffix: "{{ ad_suffix }}"'

- name: 'Install AD server'
  include_tasks: 'install.yml'
  when: not skip_addc_install

- name: Install management tools
  win_feature:
    name:
    - RSAT-AD-Tools
    include_sub_features: yes
    include_management_tools: yes

- name: Make sure Active Directory Web Services is running
  win_service:
    name: adws
    start_mode: auto
    state: started

- name: 'Add sudo schema and possibly other'
  include_tasks: 'schema.yml'
  when: not skip_schema

- name: Set Password Never Expires for system users
  win_shell: |
    Import-Module ActiveDirectory

    $user = Get-ADUser -Server {{ ad_domain }} -Identity {{ item }}   \
      -Properties PasswordNeverExpires
    if ($user.PasswordNeverExpires -eq $true) {
      exit 255
    }

    Set-ADUser -Server {{ ad_domain }} -Identity {{ item }}           \
      -PasswordNeverExpires $true
  register: result
  failed_when: "result.rc != 255 and result.rc != 0"
  changed_when: "result.rc == 0"
  until: "result.rc == 0"
  # The AD is sometimes not ready to proccess requests so we retry
  # to make it stable.
  retries: 5
  delay: 60
  with_items:
  - "{{ ad_permanent_users }}"

- name: 'Configure DNS on vagrant AD'
  include_tasks: 'dns.yml'
  when: not skip_dns
