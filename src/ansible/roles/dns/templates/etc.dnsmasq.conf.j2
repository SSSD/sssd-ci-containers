# This config is specific to downstream ci and does not
# handle multiple AD DCs and other setups yet.
# TODO: Add group DNS_SERVER that will contain all machines running dns to add them
# as servers here like master.ipa.test dc.samba.test and ad.
# dnsmasq config
listen-address=::1,127.0.0.53,127.0.0.1,{{ hostvars['dns.test']['ansible_facts']['default_ipv4']['address'] }}
log-queries
log-facility=-
local=/test/
domain=test

# Disable caching so we always query AD and IPA DNS
cache-size=0

# These zones have their own DNS server
{% for host in groups['ipa'] %}
server=/{{ hostvars[host]['ansible_facts']['domain'] }}/{{ hostvars[host]['ansible_facts']['default_ipv4']['address'] }}
{% endfor %}
{% if 'dc.samba.test' in hostvars %}
server=/samba.test/{{ hostvars['dc.samba.test']['ansible_facts']['default_ipv4']['address'] }}
{% endif %}
{% if 'dc.ad.test' in hostvars %}
server=/ad.test/{{ hostvars['dc.ad.test']['ansible_facts']['ip_addresses'][0] }}
{% elif 'ad' in groups and groups['ad'] %}
{% for ad in groups['ad'] %}
server=/{{ hostvars[ad]['ansible_facts']['windows_domain'] }}/{{ hostvars[ad]['ansible_facts']['ip_addresses'][0] }}
{% endfor %}
{% endif %}

{% if 'master.ipa.test' in hostvars %}
# Add reverse zones for artificial hosts in IPA domain
{% if 'master.ipa.test' in hostvars %}
server=/251.255.10.in-addr.arpa/{{ hostvars['master.ipa.test']['ansible_facts']['default_ipv4']['address'] }}
{% endif %}

# Add SRV record for LDAP
{% if 'master.ldap.test' in hostvars %}
srv-host=_ldap._tcp.ldap.test,master.ldap.test,389
{% endif %}

# All hosts A record
{% for host in groups['all'] %}
{% if hostvars[host].ansible_system == 'Linux' %}
address=/{{ host }}/{{ hostvars[host]['ansible_facts']['default_ipv4']['address'] }}
{% elif hostvars[host].ansible_system == 'Win32NT' %}
address=/{{ host }}/{{ hostvars[host]['ansible_facts']['ip_addresses'][0] }}
{% endif %}
{% endfor %}

# All hosts PTR records
{% for host in groups['all'] %}
{% if hostvars[host].ansible_system == 'Linux' %}
ptr-record={{ hostvars[host]['ansible_facts']['default_ipv4']['address'].split('.') | reverse | join(".") }}.in-addr.arpa,{{ host }}
{% elif hostvars[host].ansible_system == 'Win32NT' %}
ptr-record={{ hostvars[host]['ansible_facts']['ip_addresses'][0].split('.') | reverse | join(".") }}.in-addr.arpa,{{ host }}
{% endif %}
{% endfor %}
